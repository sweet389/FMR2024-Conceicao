#include <esp_now.h>
#include <WiFi.h>

// Endere√ßo MAC do receptor (altere para o MAC do receptor)
uint8_t receiverMac[] = {0x24, 0x6F, 0x28, 0xAA, 0xBB, 0xCC}; 

typedef struct {
  char message[50];
} Message;

Message msg;

void onSent(const uint8_t *macAddr, esp_now_send_status_t status) {
  Serial.print("Status de envio: ");
  Serial.println(status == ESP_NOW_SEND_SUCCESS ? "Sucesso" : "Falha");
}

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);

  // Inicializa ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Erro ao iniciar ESP-NOW");
    return;
  }
  esp_now_register_send_cb(onSent);

  // Configura o receptor como peer
  esp_now_peer_info_t peerInfo;
  memcpy(peerInfo.peer_addr, receiverMac, 6);
  peerInfo.channel = 0;
  peerInfo.encrypt = false;

  if (esp_now_add_peer(&peerInfo) != ESP_OK) {
    Serial.println("Erro ao adicionar peer");
    return;
  }
}

void loop() {
  // Preenche a mensagem a ser enviada
  strcpy(msg.message, "Franco Lindo");  //---------------------------------------------------------------------------------------------------------------------------

  esp_err_t result = esp_now_send(receiverMac, (uint8_t *)&msg, sizeof(msg));

  if (result == ESP_OK) {
    Serial.println("Mensagem enviada com sucesso!");
  } else {
    Serial.println("Erro ao enviar mensagem");
  }

  delay(2000); // Aguarda 2 segundos antes de enviar novamente
}
